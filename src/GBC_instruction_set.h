/*
 * GBC_instruction_set.h
 *
 *  Created on: 6 Dec 2020
 *      Author: dan
 */

#ifndef GBC_INSTRUCTION_SET_H_
#define GBC_INSTRUCTION_SET_H_

typedef enum instruction_e
{
	NOP               = 0x0,
	LD_BC_IMM         = 0x1,
	LD_BC_A           = 0x2,
	INC_BC            = 0x3,
	INC_B             = 0x4,
	DEC_B             = 0x5,
	LD_B_IMM          = 0x6,
	RLCA              = 0x7,
	LD_SP_IMM_ADDRESS = 0x8,
	ADD_HL_BC         = 0x9,
	LD_A_BC           = 0x0A,
	DEC_BC            = 0x0B,
	INC_C             = 0x0C,
	DEC_C             = 0x0D,
	LD_C_IMM          = 0x0E,
	RRCA              = 0x0F,
	STOP              = 0x10,
	LD_DE_IMM         = 0x11,
	LD_DE_A           = 0x12,
	INC_DE            = 0x13,
	INC_D             = 0x14,
	DEC_D             = 0x15,
	LD_D_IMM          = 0x16,
	RLA               = 0x17,
	JR_r8             = 0x18,
	ADD_HL_DE         = 0x19,
	LD_A_DE           = 0x1A,
	DEC_DE            = 0x1B,
	INC_E             = 0x1C,
	DEC_E             = 0x1D,
	LD_E_IMM          = 0x1E,
	RRA               = 0x1F,
	JR_NZ_r8          = 0x20,
	LD_HL_IMM         = 0x21,
	LD_HL_plus_A      = 0x22,
	INC_HL            = 0x23,
	INC_H             = 0x24,
	DEC_H             = 0x25,
	LD_H_IMM          = 0x26,
	DAA               = 0x27,
	JR_Z_r8           = 0x28,
	ADD_HL_HL         = 0x29,
	LD_A_HL_plus      = 0x2A,
	DEC_HL            = 0x2B,
	INC_L             = 0x2C,
	DEC_L             = 0x2D,
	LD_L_IMM          = 0x2E,
	CPL               = 0x2F,
	JR_NC_r8          = 0x30,
	LD_SP_IMM         = 0x31,
	LD_HL_minus_A     = 0x32,
	INC_SP            = 0x33,
	INC_hl            = 0x34,
	DEC_hl            = 0x35,
	LD_HL_d8          = 0x36,
	SCF               = 0x37,
	JR_C_r8           = 0x38,
	ADD_HL_SP         = 0x39,
	LD_A_HL_minus     = 0x3A,
	DEC_SP            = 0x3B,
	INC_A             = 0x3C,
	DEC_A             = 0x3D,
	LD_A_IMM          = 0x3E,
	CCF               = 0x3F,
	LD_B_B            = 0x40,
	LD_B_C            = 0x41,
	LD_B_D            = 0x42,
	LD_B_E            = 0x43,
	LD_B_H            = 0x44,
	LD_B_L            = 0x45,
	LD_B_HL           = 0x46,
	LD_B_A            = 0x47,
	LD_C_B            = 0x48,
	LD_C_C            = 0x49,
	LD_C_D            = 0x4A,
	LD_C_E            = 0x4B,
	LD_C_H            = 0x4C,
	LD_C_L            = 0x4D,
	LD_C_HL           = 0x4E,
	LD_C_A            = 0x4F,
	LD_D_B            = 0x50,
	LD_D_C            = 0x51,
	LD_D_D            = 0x52,
	LD_D_E            = 0x53,
	LD_D_H            = 0x54,
	LD_D_L            = 0x55,
	LD_D_HL           = 0x56,
	LD_D_A            = 0x57,
	LD_E_B            = 0x58,
	LD_E_C            = 0x59,
	LD_E_D            = 0x5A,
	LD_E_E            = 0x5B,
	LD_E_H            = 0x5C,
	LD_E_L            = 0x5D,
	LD_E_HL           = 0x5E,
	LD_E_A            = 0x5F,
	LD_H_B            = 0x60,
	LD_H_C            = 0x61,
	LD_H_D            = 0x62,
	LD_H_E            = 0x63,
	LD_H_H            = 0x64,
	LD_H_L            = 0x65,
	LD_H_HL           = 0x66,
	LD_H_A            = 0x67,
	LD_L_B            = 0x68,
	LD_L_C            = 0x69,
	LD_L_D            = 0x6A,
	LD_L_E            = 0x6B,
	LD_L_H            = 0x6C,
	LD_L_L            = 0x6D,
	LD_L_HL           = 0x6E,
	LD_L_A            = 0x6F,
	LD_HL_B           = 0x70,
	LD_HL_C           = 0x71,
	LD_HL_D           = 0x72,
	LD_HL_E           = 0x73,
	LD_HL_H           = 0x74,
	LD_HL_L           = 0x75,
	HALT              = 0x76,
	LD_HL_A           = 0x77,
	LD_A_B            = 0x78,
	LD_A_C            = 0x79,
	LD_A_D            = 0x7A,
	LD_A_E            = 0x7B,
	LD_A_H            = 0x7C,
	LD_A_L            = 0x7D,
	LD_A_HL           = 0x7E,
	LD_A_A            = 0x7F,
 	ADD_A_B           = 0x80,
	ADD_A_C           = 0x81,
	ADD_A_D           = 0x82,
	ADD_A_E           = 0x83,
	ADD_A_H           = 0x84,
	ADD_A_L           = 0x85,
	ADD_A_HL          = 0x86,
	ADD_A_A           = 0x87,
	ADD_A_B_Carry     = 0x88,
	ADD_A_C_Carry     = 0x89,
	ADD_A_D_Carry     = 0x8A,
	ADD_A_E_Carry     = 0x8B,
	ADD_A_H_Carry     = 0x8C,
	ADD_A_L_Carry     = 0x8D,
	ADD_A_HL_Carry    = 0x8E,
	ADD_A_A_Carry     = 0x8F,
	PREF_CB           = 0xCB
}inst_t;

typedef enum instruction_cb_prefix_e
{
	RLC_B     = 0x0,
	RLC_A     = 0x1,
}inst_cb_prefix_t;

#endif /* GBC_INSTRUCTION_SET_H_ */
